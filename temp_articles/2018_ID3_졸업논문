4. 구현 기술
본 장에서는 'SSOK'의 애플리케이션 개발에서 사용한 구현 기술들을 설명한다. 먼저, 텍스트 분류를 위해 학습 데이터로 글의 '제목'과 글이 속한 '카테고리'를 사용했다.
글 제목이 학습 데이터로 사용된 이유는 글 전체를 요약하여 충분히 글의 내용을 전달할 수 있고, 데이터의 도메인이 학교인 점을 감안하면 정확한 모델 학습에 문제가 없기 때문이다.
텍스트 분류에 사용된 모듈은 Naive Bayesian Classifier와 MLP(Multy-Layer-Perceptron) classifier로 두 가지이다.
Naive Bayesian Classifier 모델은 koNLPy의 twitter 라이브러리를 통해 단어의 출현 빈도 수를 계산하여 범주를 분류한다.
이는 '공지'혹은 '취업'이라는 두 가지 범주를 분류하기 때문에 정확도가 90%로 높았다.
MLP classifier 모델은 tensorlfow 위에서 동작하는 딥러닝 라이브러리인 keras를 사용해서 문장들을 분류했다.
Word2vec 모델에서 생성한 wakati파일들* (문장들을 형태소로 분리하여 말뭉치를 만든다.)들을 카테고리와 함께 모델을 학습한다.
KerasClassifier API를 사용했고, 정확도, 정밀도, 재현율, F1-SCORE의 결과는 아래와 같다.
accuracy : 0.9543822597676874
classification_report
             precision    recall  f1-score   support

          0       0.86      0.91      0.89       602
          1       0.96      0.87      0.91       252
          2       0.89      0.73      0.81       158
          3       0.98      0.98      0.98       746
          4       0.97      0.98      0.97      2977

avg / total       0.95      0.95      0.95      4735
